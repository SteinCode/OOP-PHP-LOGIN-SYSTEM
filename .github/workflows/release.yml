name: Create Release on PR Merge

on:
  pull_request:
    types:
      - closed

permissions:
  contents: write # Grant write permissions to create releases

jobs:
  release:
    if: github.event.pull_request.merged == true # Only run if the PR was merged
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch full history to include tags

      - name: Set up Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Get the latest tag
        id: get_tag
        run: |
          TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release # Add an ID to reference in the next steps
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG }} # Use the latest tag from the environment
          release_name: "Release for PR #${{ github.event.pull_request.number }} - ${{ github.event.pull_request.title }}" # Dynamic title from PR
          body: |
            ## Changelog
            ${{ github.event.pull_request.body }}
          draft: false
          prerelease: false

      - name: Create spectrocoin.zip
        run: |
          mkdir spectrocoin-accepting-bitcoin  # Create the folder inside the working directory
          # Copy only the necessary files and exclude the folder and unwanted files
          find . -maxdepth 1 ! -name 'spectrocoin-accepting-bitcoin' ! -name '.' ! -name '.git' ! -name 'README.txt' ! -name 'README.md' ! -name 'changelog.md' ! -name '.gitignore' -exec cp -r {} spectrocoin-accepting-bitcoin/ \;
          zip -r spectrocoin.zip spectrocoin-accepting-bitcoin  # Zip the folder
        shell: bash

      - name: Upload spectrocoin.zip as release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # Use the upload URL from the release creation step
          asset_path: spectrocoin.zip # The path to the zip file
          asset_name: spectrocoin.zip # Name of the zip file in the release
          asset_content_type: application/zip
